(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(377),{lightningChart:n,SliceLabelFormatters:o,AreaSeriesTypes:i,PointShape:l,UIOrigins:r,UIDraggingModes:x,PieChartTypes:d,UIElementBuilders:m,emptyFill:u,emptyLine:S,Themes:c}=s,p=n({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({theme:c[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0,numberOfRows:3,numberOfColumns:2}),g=p.createLegendBoxPanel({columnIndex:1,rowIndex:2,columnSpan:1,rowSpan:1}),h=window.innerWidth>850?d.LabelsOnSides:d.LabelsInsideSlices;{const e=p.createPieChart({columnIndex:0,rowIndex:0,columnSpan:1,rowSpan:1,pieOptions:{type:h}}).setTitle("CPU Usage").setMultipleSliceExplosion(!0);[{name:"OS",value:20},{name:"Browser",value:5},{name:"Video editor",value:10},{name:"Unused",value:65}].map((t=>e.addSlice(t.name,t.value))),e.setLabelFormatter(o.NamePlusRelativeValue),e.setLabelFont((e=>e.setSize(15))),g.add(e)}{const e=p.createChartXY({columnIndex:1,rowIndex:1,columnSpan:1,rowSpan:1}).setTitle("Power Consumption"),t=e.addPointLineAreaSeries({dataPattern:"ProgressiveX"}).setPointFillStyle(u).setName("CPU"),a=e.addPointLineAreaSeries({dataPattern:"ProgressiveX"}).setPointFillStyle(u).setName("GPU");e.getDefaultAxisX().setTitle("Component Load (%)"),e.getDefaultAxisY().setTitle("Watts");const s=[{x:0},{x:4},{x:8},{x:12},{x:16},{x:20},{x:24},{x:28},{x:32},{x:36},{x:40},{x:44},{x:48},{x:52},{x:56},{x:60},{x:64},{x:68},{x:72},{x:76},{x:80},{x:84},{x:88},{x:92},{x:96},{x:100}],n=[{x:0},{x:4},{x:8},{x:12},{x:16},{x:20},{x:24},{x:28},{x:32},{x:36},{x:40},{x:44},{x:48},{x:52},{x:56},{x:60},{x:64},{x:68},{x:72},{x:76},{x:80},{x:84},{x:88},{x:92},{x:96},{x:100}];t.add(s.map((e=>({x:e.x,y:3.2*e.x+9.4*Math.random()})))),a.add(n.map((e=>({x:e.x,y:2.8*e.x+6.6*Math.random()})))),g.add(e)}{const e=p.createSpiderChart({columnIndex:1,rowIndex:0,columnSpan:1,rowSpan:1}).setTitle("Average Component Load").setScaleLabelFont((e=>e.setSize(12))).setAxisLabelFont((e=>e.setSize(14).setStyle("italic")));e.addSeries().setName("System Load").addPoints({axis:"CPU",value:10},{axis:"Memory",value:10},{axis:"Network",value:20},{axis:"Hard-Drive",value:40},{axis:"GPU",value:20}),g.add(e)}{const e=p.createPieChart({columnIndex:0,rowIndex:1,columnSpan:1,rowSpan:2,pieOptions:{type:h}}).setTitle("Memory Usage").setMultipleSliceExplosion(!1).setInnerRadius(50),t={memory:["OS","Browser","Video editor","Unused"],values:[1e3,692,2e3,4500]},a=[];let s=0;for(let e=0;e<t.values.length;e++)s+=t.values[e],a.push({name:`${t.memory[e]}`,value:t.values[e]});a.map((t=>e.addSlice(t.name,t.value))),e.setLabelFormatter(o.NamePlusValue),e.setLabelFont((e=>e.setSize(15))),g.add(e),e.addUIElement(m.TextBox).setPosition({x:50,y:10}).setOrigin(r.Center).setDraggingMode(x.notDraggable).setMargin(5).setBackground((e=>e.setFillStyle(u).setStrokeStyle(S))).setTextFont((e=>e.setSize(12))).setText(`Total memory : ${s} MB`)}p.setRowHeight(0,2),g.setLegendBoxes((e=>e.setTitleFont((e=>e.setSize(12))).setEntries((e=>e.setTextFont((e=>e.setSize(12)))))))}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);